openapi: 3.0.3
info:
  title: The Agent's user-facing API
  description: The user-facing parts of The Agent's API service (excluding system-level endpoints, chat completion, maintenance endpoints, etc.)
  version: 3.9.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://your.agent.com
    description: Your Agent API

security:
  - bearerAuth: []

paths:
  /settings/{settings_type}/{resource_id}:
    get:
      summary: Get user or chat settings
      description: Retrieve settings for a specific user or chat configuration
      operationId: getSettings
      tags: [Settings]
      parameters:
        - name: settings_type
          in: path
          required: true
          schema:
            type: string
            enum: [user, chat]
          description: Type of settings to retrieve
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
          description: User ID (hex) or Chat ID (hex, UUID without hyphens) depending on settings_type
      responses:
        "200":
          description: Settings retrieved successfully
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/UserSettingsResponse"
                  - $ref: "#/components/schemas/ChatSettingsResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/ServerError"
      security:
        - bearerAuth: []

  /settings/user/{resource_id}/tools:
    get:
      summary: Get user's external tools configuration
      description: Retrieve external tools and providers configuration status
      operationId: getTools
      tags: [Settings]
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
          description: User ID in hexadecimal format
      responses:
        "200":
          description: Tools configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalToolsResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/ServerError"
      security:
        - bearerAuth: []

  /settings/user/{user_id_hex}:
    patch:
      summary: Update user settings
      description: Save user settings including API keys and tool choices
      operationId: saveUserSettings
      tags: [Settings]
      parameters:
        - name: user_id_hex
          in: path
          required: true
          schema:
            type: string
          description: User ID in hexadecimal format
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSettingsPayload"
      responses:
        "200":
          description: User settings saved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/ServerError"
      security:
        - bearerAuth: []

  /settings/chat/{chat_id}:
    patch:
      summary: Update chat settings
      description: Save chat configuration including language and reply settings
      operationId: saveChatSettings
      tags: [Settings]
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
          description: Chat ID in hexadecimal format (UUID without hyphens)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatSettingsPayload"
      responses:
        "200":
          description: Chat settings saved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/ServerError"
      security:
        - bearerAuth: []

  /user/{resource_id}/chats:
    get:
      summary: Get user-administered chats
      description: Retrieve all private and group chats where the user is an administrator
      operationId: getChats
      tags: [Chats]
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
          description: User ID in hexadecimal format
      responses:
        "200":
          description: Chats retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatInfo"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/ServerError"
      security:
        - bearerAuth: []

  /user/{resource_id}/sponsorships:
    get:
      summary: Get user's sponsorships
      description: Retrieve all sponsorships created by the user
      operationId: getSponsorships
      tags: [Sponsorships]
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
          description: User ID in hexadecimal format
      responses:
        "200":
          description: Sponsorships retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SponsorshipsResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/ServerError"
      security:
        - bearerAuth: []

    post:
      summary: Create a new sponsorship
      description: Sponsor another user by their platform-specific handle
      operationId: sponsorUser
      tags: [Sponsorships]
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
          description: User ID in hexadecimal format
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SponsorshipPayload"
      responses:
        "200":
          description: User sponsored successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/ServerError"
      security:
        - bearerAuth: []

  /user/{resource_id}/sponsorships/{platform}/{platform_handle}:
    delete:
      summary: Remove a sponsorship
      description: Remove sponsorship for a specific user
      operationId: unsponsorUser
      tags: [Sponsorships]
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
          description: User ID in hexadecimal format
        - name: platform
          in: path
          required: true
          schema:
            type: string
            enum: [telegram]
          description: Platform type for the handle resolution
        - name: platform_handle
          in: path
          required: true
          schema:
            type: string
          description: Platform-specific handle of the sponsored user (e.g., Telegram username)
      responses:
        "200":
          description: Sponsorship removed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/ServerError"
      security:
        - bearerAuth: []

  /user/{resource_id}/sponsored:
    delete:
      summary: Remove self-sponsorship
      description: User removes their own sponsorship status
      operationId: unsponsorSelf
      tags: [Sponsorships]
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
          description: User ID in hexadecimal format
      responses:
        "200":
          description: Self-sponsorship removed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsponsorSelfResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/ServerError"
      security:
        - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from one of the auth flows (usually via the chat)

  schemas:
    JWTPayload:
      type: object
      description: JWT token payload structure for platform-agnostic authentication
      properties:
        iss:
          type: string
          nullable: false
          description: Issuer - The app name that issued the token
        sub:
          type: string
          nullable: false
          description: Subject - The user's unique identifier
        platform:
          type: string
          nullable: false
          enum: [telegram]
          description: Platform where the token was issued
        platform_id:
          type: string
          nullable: true
          description: Platform-specific user ID
        platform_handle:
          type: string
          nullable: true
          description: Platform-specific user handle (username)
        sponsored_by:
          type: string
          nullable: true
          description: Name of the user who sponsors this user (if any)
        exp:
          type: integer
          nullable: false
          description: Token expiration timestamp (Unix epoch)
        iat:
          type: integer
          nullable: false
          description: Token issued at timestamp (Unix epoch)
        version:
          type: string
          nullable: false
          description: Version of the app that issued the token
      required:
        - iss
        - sub
        - platform
        - exp
        - iat
        - version

    UserSettingsPayload:
      type: object
      properties:
        open_ai_key:
          type: string
          nullable: true
          description: OpenAI API key
        anthropic_key:
          type: string
          nullable: true
          description: Anthropic API key
        perplexity_key:
          type: string
          nullable: true
          description: Perplexity API key
        replicate_key:
          type: string
          nullable: true
          description: Replicate API key
        rapid_api_key:
          type: string
          nullable: true
          description: RapidAPI key
        coinmarketcap_key:
          type: string
          nullable: true
          description: CoinMarketCap API key
        tool_choice_chat:
          type: string
          nullable: true
          description: Tool choice for chat functionality
        tool_choice_reasoning:
          type: string
          nullable: true
          description: Tool choice for reasoning tasks
        tool_choice_copywriting:
          type: string
          nullable: true
          description: Tool choice for copywriting tasks
        tool_choice_vision:
          type: string
          nullable: true
          description: Tool choice for vision tasks
        tool_choice_hearing:
          type: string
          nullable: true
          description: Tool choice for audio processing
        tool_choice_images_gen:
          type: string
          nullable: true
          description: Tool choice for image generation
        tool_choice_images_edit:
          type: string
          nullable: true
          description: Tool choice for image editing
        tool_choice_images_restoration:
          type: string
          nullable: true
          description: Tool choice for image restoration
        tool_choice_images_inpainting:
          type: string
          nullable: true
          description: Tool choice for image inpainting
        tool_choice_images_background_removal:
          type: string
          nullable: true
          description: Tool choice for background removal
        tool_choice_search:
          type: string
          nullable: true
          description: Tool choice for search functionality
        tool_choice_embedding:
          type: string
          nullable: true
          description: Tool choice for embedding generation
        tool_choice_api_fiat_exchange:
          type: string
          nullable: true
          description: Tool choice for fiat currency exchange
        tool_choice_api_crypto_exchange:
          type: string
          nullable: true
          description: Tool choice for cryptocurrency exchange
        tool_choice_api_twitter:
          type: string
          nullable: true
          description: Tool choice for Twitter API integration

    UserSettingsResponse:
      type: object
      properties:
        id:
          type: string
          nullable: false
          description: User ID in hexadecimal format
        full_name:
          type: string
          nullable: true
          description: User's full name
        telegram_username:
          type: string
          nullable: true
          description: Telegram username
        telegram_chat_id:
          type: string
          nullable: true
          description: Telegram chat ID
        telegram_user_id:
          type: integer
          nullable: true
          description: Telegram user ID
        open_ai_key:
          type: string
          nullable: true
          description: OpenAI API key (masked)
        anthropic_key:
          type: string
          nullable: true
          description: Anthropic API key (masked)
        perplexity_key:
          type: string
          nullable: true
          description: Perplexity API key (masked)
        replicate_key:
          type: string
          nullable: true
          description: Replicate API key (masked)
        rapid_api_key:
          type: string
          nullable: true
          description: RapidAPI key (masked)
        coinmarketcap_key:
          type: string
          nullable: true
          description: CoinMarketCap API key (masked)
        tool_choice_chat:
          type: string
          nullable: true
        tool_choice_reasoning:
          type: string
          nullable: true
        tool_choice_copywriting:
          type: string
          nullable: true
        tool_choice_vision:
          type: string
          nullable: true
        tool_choice_hearing:
          type: string
          nullable: true
        tool_choice_images_gen:
          type: string
          nullable: true
        tool_choice_images_edit:
          type: string
          nullable: true
        tool_choice_images_restoration:
          type: string
          nullable: true
        tool_choice_images_inpainting:
          type: string
          nullable: true
        tool_choice_images_background_removal:
          type: string
          nullable: true
        tool_choice_search:
          type: string
          nullable: true
        tool_choice_embedding:
          type: string
          nullable: true
        tool_choice_api_fiat_exchange:
          type: string
          nullable: true
        tool_choice_api_crypto_exchange:
          type: string
          nullable: true
        tool_choice_api_twitter:
          type: string
          nullable: true
        group:
          type: string
          nullable: false
          description: User group/role
        created_at:
          type: string
          nullable: false
          format: date-time
          description: User creation timestamp
      required:
        - id
        - group
        - created_at

    ChatSettingsPayload:
      type: object
      properties:
        language_name:
          type: string
          nullable: false
          description: Display name of the language
        language_iso_code:
          type: string
          nullable: false
          description: ISO code of the language
        reply_chance_percent:
          type: integer
          nullable: false
          minimum: 0
          maximum: 100
          description: Percentage chance of replying to messages
        release_notifications:
          type: string
          nullable: false
          enum: [none, major, minor, all]
          description: Release notification settings
      required:
        - language_name
        - language_iso_code
        - reply_chance_percent
        - release_notifications

    ChatSettingsResponse:
      type: object
      properties:
        chat_id:
          type: string
          nullable: false
          description: Chat ID in hexadecimal format (UUID without hyphens)
        title:
          type: string
          nullable: true
          description: Chat title
        language_name:
          type: string
          nullable: true
          description: Display name of the language
        language_iso_code:
          type: string
          nullable: true
          description: ISO code of the language
        reply_chance_percent:
          type: integer
          nullable: false
          minimum: 0
          maximum: 100
          description: Percentage chance of replying to messages
        release_notifications:
          type: string
          nullable: false
          enum: [none, major, minor, all]
          description: Release notification settings
        is_private:
          type: boolean
          nullable: false
          description: Whether the chat is private
        is_own:
          type: boolean
          nullable: false
          description: Whether the chat belongs to the requesting user
      required:
        - chat_id
        - reply_chance_percent
        - release_notifications
        - is_private
        - is_own

    SponsorshipPayload:
      type: object
      properties:
        platform_handle:
          type: string
          nullable: false
          description: Platform-specific handle of the user to sponsor (e.g., Telegram username)
        platform:
          type: string
          nullable: false
          enum: [telegram]
          description: Platform type for the handle resolution
      required:
        - platform_handle
        - platform

    ChatInfo:
      type: object
      properties:
        chat_id:
          type: string
          nullable: false
          description: Chat ID in hexadecimal format (UUID without hyphens)
        title:
          type: string
          nullable: true
          description: Chat title
        is_own:
          type: boolean
          nullable: false
          description: Whether the chat belongs to the requesting user (e.g., private chat)
        platform:
          type: string
          nullable: false
          enum: [telegram]
          description: Platform type of this chat
      required:
        - chat_id
        - is_own
        - platform

    ExternalToolsResponse:
      type: object
      properties:
        tools:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/ExternalToolResponse"
          description: List of external tools
        providers:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/ExternalToolProviderResponse"
          description: List of external tool providers
      required:
        - tools
        - providers

    ExternalToolResponse:
      type: object
      properties:
        definition:
          $ref: "#/components/schemas/ExternalTool"
        is_configured:
          type: boolean
          nullable: false
          description: Whether the tool is configured
      required:
        - definition
        - is_configured

    ExternalToolProviderResponse:
      type: object
      properties:
        definition:
          $ref: "#/components/schemas/ExternalToolProvider"
        is_configured:
          type: boolean
          nullable: false
          description: Whether the provider is configured
      required:
        - definition
        - is_configured

    ExternalTool:
      type: object
      properties:
        id:
          type: string
          nullable: false
          description: Tool ID
        name:
          type: string
          nullable: false
          description: Tool name
        provider:
          $ref: "#/components/schemas/ExternalToolProvider"
        types:
          type: array
          nullable: false
          items:
            type: string
          description: Tool types/capabilities
      required:
        - id
        - name
        - provider
        - types

    ExternalToolProvider:
      type: object
      properties:
        id:
          type: string
          nullable: false
          description: Provider ID
        name:
          type: string
          nullable: false
          description: Provider name
        token_management_url:
          type: string
          nullable: false
          description: URL for managing tokens
        token_format:
          type: string
          nullable: false
          description: Expected token format
        tools:
          type: array
          nullable: false
          items:
            type: string
          description: List of tool names
      required:
        - id
        - name
        - token_management_url
        - token_format
        - tools

    SponsorshipsResponse:
      type: object
      properties:
        sponsorships:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/SponsorshipInfo"
          description: List of sponsorships
        max_sponsorships:
          type: integer
          nullable: false
          description: Maximum number of sponsorships allowed
      required:
        - sponsorships
        - max_sponsorships

    SponsorshipInfo:
      type: object
      properties:
        full_name:
          type: string
          nullable: true
          description: Full name of the sponsored user
        platform_handle:
          type: string
          nullable: true
          description: Platform-specific handle of sponsored user (e.g., Telegram username)
        platform:
          type: string
          nullable: false
          enum: [telegram]
          description: Platform type where the first handle was found
        sponsored_at:
          type: string
          nullable: false
          format: date-time
          description: When the sponsorship was created
        accepted_at:
          type: string
          nullable: true
          format: date-time
          description: When the sponsorship was accepted
      required:
        - platform
        - sponsored_at

    StatusResponse:
      type: object
      properties:
        status:
          type: string
          nullable: false
          enum: [OK]
          description: Operation status
      required:
        - status

    UnsponsorSelfResponse:
      type: object
      properties:
        settings_link:
          type: string
          nullable: false
          description: Link to settings page
      required:
        - settings_link

    ErrorResponse:
      type: object
      properties:
        reason:
          type: string
          nullable: false
          description: Error reason
      required:
        - reason

  responses:
    UnauthorizedError:
      description: Authentication required or token expired
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                nullable: false
                description: Error reason
            required:
              - detail

    ForbiddenError:
      description: Access denied
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                nullable: false
                description: Error reason
            required:
              - detail

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                $ref: "#/components/schemas/ErrorResponse"
            required:
              - detail
